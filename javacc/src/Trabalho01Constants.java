/* Generated By:JavaCC: Do not edit this line. Trabalho01Constants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Trabalho01Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTARIO_LINHA = 6;
  /** RegularExpression Id. */
  int COMENTARIO_BLOCO = 7;
  /** RegularExpression Id. */
  int STRING_LITERAL = 8;
  /** RegularExpression Id. */
  int TIPO = 9;
  /** RegularExpression Id. */
  int INT = 10;
  /** RegularExpression Id. */
  int STRING = 11;
  /** RegularExpression Id. */
  int FLOAT = 12;
  /** RegularExpression Id. */
  int BOOLEAN = 13;
  /** RegularExpression Id. */
  int MAIN = 14;
  /** RegularExpression Id. */
  int IMPORT = 15;
  /** RegularExpression Id. */
  int RETURN = 16;
  /** RegularExpression Id. */
  int TF = 17;
  /** RegularExpression Id. */
  int TRUE = 18;
  /** RegularExpression Id. */
  int FALSE = 19;
  /** RegularExpression Id. */
  int OPERADOR_ARITMETICO = 20;
  /** RegularExpression Id. */
  int IF = 21;
  /** RegularExpression Id. */
  int ELSE = 22;
  /** RegularExpression Id. */
  int WHILE = 23;
  /** RegularExpression Id. */
  int FOR = 24;
  /** RegularExpression Id. */
  int INPUT = 25;
  /** RegularExpression Id. */
  int PRINT = 26;
  /** RegularExpression Id. */
  int FUNCAO = 27;
  /** RegularExpression Id. */
  int PARENTESE_A = 28;
  /** RegularExpression Id. */
  int PARENTESE_F = 29;
  /** RegularExpression Id. */
  int CHAVE_A = 30;
  /** RegularExpression Id. */
  int CHAVE_F = 31;
  /** RegularExpression Id. */
  int ATRIBUICAO = 32;
  /** RegularExpression Id. */
  int LITERAL = 33;
  /** RegularExpression Id. */
  int OPERADOR_RELACIONAL = 34;
  /** RegularExpression Id. */
  int VALUE = 35;
  /** RegularExpression Id. */
  int PONTO_VIRGULA = 36;
  /** RegularExpression Id. */
  int VIRGULA = 37;
  /** RegularExpression Id. */
  int INC_DEC = 38;
  /** RegularExpression Id. */
  int NUMBER = 39;
  /** RegularExpression Id. */
  int LETTER = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "<COMENTARIO_LINHA>",
    "<COMENTARIO_BLOCO>",
    "<STRING_LITERAL>",
    "<TIPO>",
    "\"int\"",
    "\"String\"",
    "\"float\"",
    "\"boolean\"",
    "\"salve\"",
    "\"import\"",
    "\"return\"",
    "<TF>",
    "\"true\"",
    "\"false\"",
    "<OPERADOR_ARITMETICO>",
    "\"sepa\"",
    "\"sepaqnao\"",
    "\"trampo\"",
    "\"mocota\"",
    "\"desembucha\"",
    "\"chegaai\"",
    "\"funcao\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "<LITERAL>",
    "<OPERADOR_RELACIONAL>",
    "<VALUE>",
    "\";\"",
    "\",\"",
    "<INC_DEC>",
    "<NUMBER>",
    "<LETTER>",
  };

}
